package com.redhering.nunuaraha;


import android.util.Log;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.RelativeLayout;

import java.util.ArrayList;

import com.redhering.nunuaraha.R;
 
import android.annotation.SuppressLint;
import android.app.ActionBar.LayoutParams;
import android.content.Context;
import android.content.SharedPreferences;
import android.graphics.Typeface;
import android.view.LayoutInflater;
import android.widget.TextView;
 
@SuppressLint("InflateParams")
public class AdapterSimpleList extends BaseAdapter {
    private static ArrayList<RequestedResultsSimpleList> searchArrayList;
    private LayoutInflater mInflater;
    private Context context;
    private Typeface font;
    private String activityName; //instance variable
    
    public static final String MY_SESSION = "mySession";
    SharedPreferences sharedPreferences;
    SharedPreferences.Editor editor;
 
    public AdapterSimpleList(Context ctx, ArrayList<RequestedResultsSimpleList> results, Typeface font) {
        searchArrayList = results;
        mInflater = LayoutInflater.from(ctx);
        this.font = font;
        context = ctx;
        activityName = context.getClass().getSimpleName();
        sharedPreferences = context.getSharedPreferences(MY_SESSION,Context.MODE_PRIVATE);
	    editor = sharedPreferences.edit();
    }
    
	public int getCount() {
        return searchArrayList.size();
    }
 
    public Object getItem(int position) {
        return searchArrayList.get(position);
    }
 
    public long getItemId(int position) {
        return position;
    }
 
    public View getView(int position, View convertView, ViewGroup parent) {
        ViewHolder holder;
        String ActivityListBranches = "ActivityListBranches";
        String SELECTED_BRANCH_ID = sharedPreferences.getString("selectedBranchId", null);
        if (convertView == null) {
            convertView = mInflater.inflate(R.layout.simple_list, null);
            holder = new ViewHolder();
            holder.title = (TextView) convertView.findViewById(R.id.mysimplelist);
            
            //Delivery charges view only appears on ActivityListBranches
            if(activityName.equals(ActivityListBranches)){
	            holder.deliverycharge = new TextView(context.getApplicationContext());
	            ((ViewGroup) convertView).addView(holder.deliverycharge);
	            RelativeLayout.LayoutParams params = (RelativeLayout.LayoutParams)holder.deliverycharge.getLayoutParams();
	            params.addRule(RelativeLayout.ALIGN_PARENT_RIGHT);
	            params.addRule(RelativeLayout.RIGHT_OF, R.id.mysimplelist);
	            params.addRule(RelativeLayout.LEFT_OF, R.id.arrowRight);
	            holder.deliverycharge.setLayoutParams(params); //causes layout update
	            
	            holder.currentSelection = new TextView(context.getApplicationContext());
	            ((ViewGroup) convertView).addView(holder.currentSelection);
	            RelativeLayout.LayoutParams currentSelectionParams = (RelativeLayout.LayoutParams)holder.currentSelection.getLayoutParams();
	            currentSelectionParams.addRule(RelativeLayout.BELOW, R.id.mysimplelist);
	            holder.currentSelection.setLayoutParams(currentSelectionParams); //causes layout update
            }
            
 
            convertView.setTag(holder);
        } else {
            holder = (ViewHolder) convertView.getTag();
        }
 
        holder.title.setText(searchArrayList.get(position).getTitle());
        holder.title.setTypeface(font);
        
        //Delivery charges view only appears on ActivityListBranches
        if(activityName.equals(ActivityListBranches)){
        	String charges = searchArrayList.get(position).getDeliveryCharge();
        	String freedelivery = "Free Delivery";
        	holder.deliverycharge.setText(" - " + charges);
    		holder.deliverycharge.setTypeface(font,Typeface.ITALIC);
        	
        	//Asiigning text color based on the text info
        	holder.deliverycharge.setTextColor(context.getResources().getColor(R.color.blue));
        	if(charges.equals(freedelivery)){
        		holder.deliverycharge.setTextColor(context.getResources().getColor(R.color.red));
        	}
        	
        	if(SELECTED_BRANCH_ID.equals(searchArrayList.get(position).getId())){
            	holder.currentSelection.setText("(Your trolley is here)");
            	holder.currentSelection.setTypeface(font,Typeface.ITALIC);
            	holder.currentSelection.setTextColor(context.getResources().getColor(R.color.green));
            	holder.currentSelection.getLayoutParams().height = 30;
            	holder.title.setTextColor(context.getResources().getColor(R.color.green));
            }else{
            	holder.currentSelection.setText("");
            	holder.currentSelection.getLayoutParams().height = 0;
            	holder.title.setTextColor(context.getResources().getColor(R.color.grey333));
            }
        	
        	Log.i("Current Branch --> "+SELECTED_BRANCH_ID, "This Branch --> " + searchArrayList.get(position).getId());
        }
        
        
        
        return convertView;
    }
 
    private Object getResources() {
		// TODO Auto-generated method stub
		return null;
	}

	static class ViewHolder {
        TextView title;
        TextView deliverycharge;
        TextView currentSelection;
        ImageView itemImage;
    }
    
    
    private Context getContext() {
		// TODO Auto-generated method stub
		return null;
	}
}
