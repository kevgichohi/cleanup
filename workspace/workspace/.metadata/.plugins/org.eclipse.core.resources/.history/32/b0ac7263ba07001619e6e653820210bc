package com.redhering.nunuaraha;


import java.util.ArrayList;

import android.annotation.SuppressLint;
import android.content.Context;
import android.content.SharedPreferences;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.graphics.Typeface;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ListAdapter;
import android.widget.RelativeLayout;
import android.widget.TextView;
 
@SuppressLint("InflateParams")
public class AdapterSimpleList extends BaseAdapter {
    private static ArrayList<RequestedResultsSimpleList> searchArrayList;
    private LayoutInflater mInflater;
    private Context context;
    private Typeface font;
    private String activityName; //instance variable
    
    SQLiteDatabase nunuaRahaDatabase;
    
    public static final String MY_SESSION = "mySession";
	protected static final String MODE_PRIVATE = null;
	public static String MY_PHONE_NUMBER;
    SharedPreferences sharedPreferences;
    SharedPreferences.Editor editor;
 
    public AdapterSimpleList(Context ctx, ArrayList<RequestedResultsSimpleList> results, Typeface font) {
        searchArrayList = results;
        mInflater = LayoutInflater.from(ctx);
        this.font = font;
        context = ctx;
        activityName = context.getClass().getSimpleName();
        sharedPreferences = context.getSharedPreferences(MY_SESSION,Context.MODE_PRIVATE);
        
	    editor = sharedPreferences.edit();
    }
    
	public int getCount() {
        return searchArrayList.size();
    }
 
    public Object getItem(int position) {
        return searchArrayList.get(position);
    }
 
    public long getItemId(int position) {
        return position;
    }
    
    @Override
    public boolean isEnabled(int position){
    	return true;
    }
    
   
 
    public View getView(int position, View convertView, ViewGroup parent) {
        ViewHolder holder;
        String ActivityListOutlets = "ActivityStep01ListOutlets";
        String ActivityListBranches = "ActivityStep04ListBranches";
        String ActivityMyAddresses = "ActivityMyAccountAddresses";
        String Activityneighbour = "ActivityStep03ListNeighbourhood";
        
        if (convertView == null) {
        	if(activityName.equals(ActivityMyAddresses)){
        		convertView = mInflater.inflate(R.layout.simple_listaddress, null);
        		
        		String CUSTOMER_PHONE_NUMBER = sharedPreferences.getString("userPhoneNumber", null);
        		
        		AdapterView<ListAdapter> listView;
				
        	        // inflate other items here : 
        	        Button deleteButton = (Button) convertView.findViewById(R.id.arrowRight);
        	         deleteButton.setTag(position);

        	        deleteButton.setOnClickListener(
        	            new Button.OnClickListener() {
        	                @Override
        	                public void onClick(View v) {
        	                    //View view = null;
								//Integer index = (Integer) view.getTag();
        	                	int pos = (int)v.getTag();
        	                    
        	                    String strI = Integer.toString(pos);
        	                    
        	                     String itemID = searchArrayList.get(pos).getId();
        	                    
        	                    Log.i("itemID", itemID);
        	                    
        	                    
     
        	                    
        	                    if(sharedPreferences.contains("userPhoneNumber")) {
        	              			MY_PHONE_NUMBER = sharedPreferences.getString("userPhoneNumber", null);
        	                       
        	              			nunuaRahaDatabase = openOrCreateDatabase("nunuaRahaDatabase",MODE_PRIVATE,null);
        	              		try{
        	                    	Log.i("MY_PHONE_NUMBER", MY_PHONE_NUMBER);
        	                    	String query2 = "SELECT * FROM hdjgf_customers  WHERE phone = "+ MY_PHONE_NUMBER;
        	                                	                    	
        	                    	Log.i("query2", query2);
            	                    Log.i("MY_PHONE_NUMBER", MY_PHONE_NUMBER);
            	                    
        	                    	Cursor c = nunuaRahaDatabase.rawQuery(query2,null);
        	        	         	
        	                    if (c != null)
        	            		{
        	            			c.moveToFirst();
        	            		
            	                    int k = 0;
            	        	    	while (c.isAfterLast() == false) {
            	        	    		String item_id = c.getString(0);
            	        	    		
            	                    try{
            	                        String query1 = "DELETE FROM hdjgf_customer_addresses WHERE location_id="+itemID+ " AND user_id="+item_id;
                	                    
                	                    Log.i("quer", item_id);
                	                    Log.i("query1", query1);
                	                    Log.i("Orders"," --> "+searchArrayList);
            	                    	 nunuaRahaDatabase.execSQL(query1);
            	        	         }catch (Exception e){
            	        	             e.printStackTrace();
            	        	         }

            	        	    	}
        	            		}
            	        	    	
        	                    
        	                    }catch (Exception e){
           	        	             e.printStackTrace();
           	        	        
            	                    
            	        	    	}
        	        	         
        	                    searchArrayList.remove(pos); 
        	                 
        	                    }

        	                   
        	                    
        	                    notifyDataSetChanged();
        	                
        	                }

							private SQLiteDatabase openOrCreateDatabase(
									String string, String modePrivate,
									Object object) {
								// TODO Auto-generated method stub
								return null;
							}
        	            }
        	        );
        		
        		
        	}else if(activityName.equals(Activityneighbour)){
        		convertView = mInflater.inflate(R.layout.simple_listneighbourhood, null);
        	}
        	
        	else{
        		convertView = mInflater.inflate(R.layout.simple_list, null);
        	}
            holder = new ViewHolder();
            holder.title = (TextView) convertView.findViewById(R.id.mysimplelist);
            
            //Delivery charges view only appears on ActivityStep04ListBranches
            /**if(activityName.equals(ActivityStep04ListBranches)){
	            holder.deliverycharge = new TextView(context.getApplicationContext());
	            ((ViewGroup) convertView).addView(holder.deliverycharge);
	            RelativeLayout.LayoutParams params = (RelativeLayout.LayoutParams)holder.deliverycharge.getLayoutParams();
	            params.addRule(RelativeLayout.ALIGN_PARENT_RIGHT);
	            params.addRule(RelativeLayout.RIGHT_OF, R.id.mysimplelist);
	            params.addRule(RelativeLayout.LEFT_OF, R.id.arrowRight);
	            holder.deliverycharge.setLayoutParams(params); //causes layout update
            }**/
            
            if(activityName.equals(ActivityListOutlets) || activityName.equals(ActivityListBranches)){
	            holder.currentSelection = new TextView(context.getApplicationContext());
	            ((ViewGroup) convertView).addView(holder.currentSelection);
	            RelativeLayout.LayoutParams currentSelectionParams = (RelativeLayout.LayoutParams)holder.currentSelection.getLayoutParams();
	            currentSelectionParams.addRule(RelativeLayout.BELOW, R.id.mysimplelist);
	            holder.currentSelection.setLayoutParams(currentSelectionParams); //causes layout update
            }
            
 
            convertView.setTag(holder);
        } else {
            holder = (ViewHolder) convertView.getTag();
        }
 
        holder.title.setText(searchArrayList.get(position).getTitle());
        holder.title.setTypeface(font);
        
        //Delivery charges view only appears on ActivityStep04ListBranches
        if(activityName.equals(ActivityListBranches)){
        	/**String charges = searchArrayList.get(position).getDeliveryCharge();
        	String freedelivery = "Free Delivery";
        	holder.deliverycharge.setText(" - " + charges);
    		holder.deliverycharge.setTypeface(font,Typeface.ITALIC);
        	
        	//Asigning text color based on the text info
        	holder.deliverycharge.setTextColor(context.getResources().getColor(R.color.blue));
        	if(charges.equals(freedelivery)){
        		holder.deliverycharge.setTextColor(context.getResources().getColor(R.color.red));
        	}**/
        	
        	if(sharedPreferences.contains("selectedBranchId") && sharedPreferences.contains("myTrolley")) {
                String SELECTED_BRANCH_ID = sharedPreferences.getString("selectedBranchId", null);
	        	if(SELECTED_BRANCH_ID.equals(searchArrayList.get(position).getId())){
	            	holder.currentSelection.setText("(Your trolley is here)");
	            	holder.currentSelection.setTypeface(font,Typeface.ITALIC);
	            	holder.currentSelection.setTextColor(context.getResources().getColor(R.color.green));
	            	holder.currentSelection.getLayoutParams().height = 30;
	            }else{
	            	holder.currentSelection.setText("");
	            	holder.currentSelection.getLayoutParams().height = 0;
	            }
	        	Log.i("Current Branch --> "+SELECTED_BRANCH_ID, "This Branch --> " + searchArrayList.get(position).getId());
        	}else{
            	holder.currentSelection.setText("");
            	holder.currentSelection.getLayoutParams().height = 0;
            }
        	
        }
        
        if(activityName.equals(ActivityListOutlets)){
        	if(sharedPreferences.contains("selectedOutletId") && sharedPreferences.contains("myTrolley")) {
                String SELECTED_OUTLET_ID = sharedPreferences.getString("selectedOutletId", null);
	        	if(SELECTED_OUTLET_ID.equals(searchArrayList.get(position).getId())){
	            	holder.currentSelection.setText("(Your trolley is here)");
	            	holder.currentSelection.setTypeface(font,Typeface.ITALIC);
	            	holder.currentSelection.setTextColor(context.getResources().getColor(R.color.green));
	            	holder.currentSelection.getLayoutParams().height = 30;
	            	Log.i("Current Outlet --> "+SELECTED_OUTLET_ID, "This Outlet --> " + searchArrayList.get(position).getId());
	            }else{
	            	holder.currentSelection.setText("");
	            	holder.currentSelection.getLayoutParams().height = 0;
	            }
        	}else{
            	holder.currentSelection.setText("");
            	holder.currentSelection.getLayoutParams().height = 0;
            }
        }
        
        //convertView.setClickable(true);
        //convertView.setFocusable(true);
        //convertView.setBackgroundResource(android.R.drawable.menuitem_background);
        
        
        return convertView;
    }
 
    private Object getResources() {
		// TODO Auto-generated method stub
		return null;
	}

	static class ViewHolder {
        public Object arrowRight;
		TextView title;
        TextView deliverycharge;
        TextView currentSelection;
        ImageView itemImage;
    }
    
    
    private Context getContext() {
		// TODO Auto-generated method stub
		return null;
	}

	public void remove(String string) {
		// TODO Auto-generated method stub
		
	}
	
	public Cursor selectPassword(String MY_PHONE_NUMBER){


	    return nunuaRahaDatabase.rawQuery("SELECT * FROM hdjgf_customers  WHERE phone = "+ MY_PHONE_NUMBER, null);
	}
	
	
	
	public Cursor deletePassword(String item_id, String itemID){

		String query1 = "DELETE FROM hdjgf_customer_addresses WHERE location_id="+itemID+ " AND user_id="+item_id;
        

		return nunuaRahaDatabase.rawQuery(query1, null);
	}
	
	
}
