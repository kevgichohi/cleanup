package com.redhering.nunuaraha;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.concurrent.ExecutionException;

import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import com.google.gson.Gson;
import com.redhering.nunuaraha.R;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.ListActivity;
import android.content.DialogInterface;
import android.content.DialogInterface.OnClickListener;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Typeface;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.Environment;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.AdapterView.OnItemClickListener;

public class ActivityStep08ListCart extends Activity {
	
	SQLiteDatabase nunuaRahaDatabase;
	public static final String MY_SESSION = "mySession";
    SharedPreferences sharedPreferences;
    SharedPreferences.Editor editor;
    Gson gson;
	
	ArrayList<RequestedResults> MYCART;
	AdapterMyCart myadapter;
	LinearLayout layout_progressbar;
	RelativeLayout headersection;
	RelativeLayout footersection;
	ListView listView;
    public Integer TOTAL = 0;
	public static String SELECTED_BRANCH_ID;
	public static String SELECTED_BRANCH_TITLE;
	public static String SELECTED_BRAND_ID;
	public static String SELECTED_BRAND_TITLE;
	public static String SELECTED_BRAND_LOGO;
	Typeface EkMukta_Light;
	TextView app_name;
	TextView headerText;
	Button menuIcon;
	TextView cartButtonNotification;
	TextView subtitle;
	Button shoppingButton;
	Button cartButton;
	Button proceedToCheckout;
	Button clearcart;
	Button backToAisles;
	ImageView shopLogoview;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.scroller_shoppingcart);
		overridePendingTransition(R.anim.slide_page_in,R.anim.slide_page_out);//SlideIn animation
		listView = (ListView) findViewById(R.id.productsListView);
		layout_progressbar = (LinearLayout) findViewById(R.id.progressbar_view);
	    headersection = (RelativeLayout) findViewById(R.id.header);
	    footersection = (RelativeLayout) findViewById(R.id.footer);
	    sharedPreferences = getSharedPreferences(MY_SESSION,Context.MODE_PRIVATE);
	    editor = sharedPreferences.edit();
	    gson = new Gson();
	    SELECTED_BRAND_ID = sharedPreferences.getString("selectedBrandId", null);
		SELECTED_BRAND_TITLE = sharedPreferences.getString("selectedBrand", null);
		SELECTED_BRAND_LOGO = sharedPreferences.getString("selectedBrandLogo", null);
		SELECTED_BRANCH_ID = sharedPreferences.getString("selectedBranchId", null);
		SELECTED_BRANCH_TITLE = sharedPreferences.getString("selectedBranch", null);
		EkMukta_Light = Typeface.createFromAsset(getAssets(),"fonts/ek_mukta/EkMukta-Light.ttf");
  		app_name = (TextView) findViewById(R.id.app_name);
		headerText = (TextView) findViewById(R.id.headerText);
		menuIcon  = (Button) findViewById(R.id.menu_icon);
		shoppingButton = (Button) findViewById(R.id.shoppingButton);
  		cartButton = (Button) findViewById(R.id.cartButton);
  		cartButtonNotification = (TextView) findViewById(R.id.cartButtonNotification);
  		subtitle = (TextView) findViewById(R.id.subtitle);
  		backToAisles = (Button) findViewById(R.id.backToAisles);
  		proceedToCheckout = (Button) findViewById(R.id.proceedToCheckout);
		clearcart = (Button) findViewById(R.id.clearcart);
    	shopLogoview = (ImageView) findViewById(R.id.shopLogo);
		
    	headerText.setText(SELECTED_BRANCH_TITLE);
	    app_name.setTypeface(EkMukta_Light);
		cartButton.setTextColor(getResources().getColor(R.color.green));
		footersection.setVisibility(View.VISIBLE);
		
		//LOAD QUICKLINKS
  		HelperQuickLinks helperQuickLinks = new HelperQuickLinks();
  		helperQuickLinks.create(menuIcon,shoppingButton,cartButton,cartButtonNotification,ActivityStep08ListCart.this,sharedPreferences);
		
  		//DOWNLOAD OUTLET LOGO
        //ImageDownloader imageDownloader = new ImageDownloader();
        //imageDownloader.download(SELECTED_BRAND_LOGO, shopLogoview);
        
        String photoPath = Environment.getExternalStorageDirectory()+"/NunuaRaha/"+SELECTED_BRAND_LOGO;
        BitmapFactory.Options options = new BitmapFactory.Options();
        options.inPreferredConfig = Bitmap.Config.ARGB_8888;
        Bitmap bitmap = BitmapFactory.decodeFile(photoPath, options);
        shopLogoview.setImageBitmap(bitmap);
        
        
  		//LIST VIEW
        new populateListViewTask().execute(); 
  		MYCART = new ArrayList<RequestedResults>();
		myadapter = new AdapterMyCart(ActivityStep08ListCart.this, MYCART,cartButtonNotification,subtitle);
		listView.setAdapter(myadapter);
		
		clearcart.setVisibility(View.VISIBLE);
		clearcart.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
            	try{
            		showDialogEmptyTrolley("Are you sure?");
		        }
		        catch (Exception e) {
		            e.printStackTrace();
		        }
            }
        });
		
		backToAisles.setVisibility(View.VISIBLE);
		backToAisles.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
            	Intent intent = new Intent(ActivityStep08ListCart.this, ActivityStep05ListAisles.class);
	    	    startActivity(intent);
            }
        });
        
		proceedToCheckout.setVisibility(View.VISIBLE);
        proceedToCheckout.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
            	Intent intent = new Intent(ActivityStep08ListCart.this, ActivityStep09ListDeliveryOptions.class);
	    	    startActivity(intent);
            }
        });
        
	}
	
	@Override
	public void onBackPressed() {
		finish();
		overridePendingTransition(R.anim.slide_page_in,R.anim.slide_page_out);//SlideIn animation
	}
	
	@Override
	public void finish() {
	    super.finish();
		overridePendingTransition(R.anim.slide_page_in,R.anim.slide_page_out);//SlideIn animation
	}
	
	@Override
	public void onResume() {
		super.onResume();  // Always call the superclass method first
		overridePendingTransition(R.anim.slide_page_in,R.anim.slide_page_out);//SlideIn animation
		
		myadapter = new AdapterMyCart(ActivityStep08ListCart.this, MYCART,cartButtonNotification,subtitle);
		listView.setAdapter(myadapter);
		myadapter.notifyDataSetChanged();
		
		//LOAD QUICKLINKS
  		HelperQuickLinks helperQuickLinks = new HelperQuickLinks();
  		helperQuickLinks.create(menuIcon,shoppingButton,cartButton,cartButtonNotification,ActivityStep08ListCart.this,sharedPreferences);
	}

	private class populateListViewTask extends AsyncTask<String, Void, String> {
		
		@Override
	    protected void onPreExecute() {
	        super.onPreExecute();
	    }
		
		protected String doInBackground(String...params) {
			// TODO Auto-generated method stub
			return "Done";
		}
		
	    protected void onPostExecute(String params) {
	    	layout_progressbar.setVisibility(View.GONE);
            listView.setVisibility(View.VISIBLE);
      		listView.setDividerHeight(0);
            myadapter.notifyDataSetChanged();
            
            JSONObject jsonMyCartObject = null;
            String stockString = "";
            if(sharedPreferences.contains("myTrolley")) {
            	String jsonMyCartString = sharedPreferences.getString("myTrolley", null);
				try {
					jsonMyCartObject = new JSONObject(jsonMyCartString);
					Iterator<String> loop = jsonMyCartObject.keys();
				    while (loop.hasNext()) {
				        String key = loop.next();
				        stockString = stockString + key+",";
				    }
				} catch (JSONException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
            }
            String[] stockArr = stockString.split(",");
	    	String inClause = gson.toJson(stockArr); //at this point inClause will look like ["23","343","33","55","43"]
	    	inClause = inClause.replace("[","(");//at this point inClause will look like ("23","343","33","55","43"]
	    	inClause = inClause.replace("]",")");//at this point inClause will look like ("23","343","33","55","43")
	    	inClause = inClause.replace("\"","");//now at this point inClause will look like  (23,343,33,55,43) so use it to construct your SELECT
	    	Log.i("in clause"," -->" +inClause);
            
	    	nunuaRahaDatabase = openOrCreateDatabase("nunuaRahaDatabase",MODE_PRIVATE,null);
	    	Cursor resultsProductsCursor = nunuaRahaDatabase.rawQuery("SELECT * FROM hdjgf_shops_stocks_brands WHERE id IN " + inClause,null);
	    	resultsProductsCursor.moveToFirst();
        	String[] list_item_ids = new String[resultsProductsCursor.getCount()];
			String[] list_item_titles = new String[resultsProductsCursor.getCount()];
			int k = 0;
	    	while (resultsProductsCursor.isAfterLast() == false) {
				String item_id = resultsProductsCursor.getString(0);
				String item_title = resultsProductsCursor.getString(1);
            	String item_size = resultsProductsCursor.getString(2);
            	String item_price = resultsProductsCursor.getString(3);
            	String item_thumbnail_url = "https://smokesignal.co.ke/mobiletrolley/img/uploads/" +resultsProductsCursor.getString(4);
            	Integer item_units_in_cart = 0;
				try {
					item_units_in_cart = Integer.parseInt(jsonMyCartObject.getString(item_id));
				} catch (NumberFormatException | JSONException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            	TOTAL = TOTAL + (Integer.parseInt(item_price) * item_units_in_cart);
				
				list_item_ids[k] = item_id;
				list_item_titles[k] = item_title;
				
				RequestedResults d = new RequestedResults();
				
				d.setId(item_id);
				d.setTitle(item_title);
				d.setPrice(item_price);
				d.setSize(item_size);
				d.setThumbnailUrl(item_thumbnail_url);
				d.setUnits(item_units_in_cart);
				
			    d.item_id = item_id;
			    d.item_title = item_title;
			    d.item_price = item_price;
			    d.item_size = item_size;
			    d.item_thumbnail_url = item_thumbnail_url;
			    d.item_units_in_cart = item_units_in_cart;
			    
			    MYCART.add(d);
				
	    	    k++;
	    	    resultsProductsCursor.moveToNext();
	    	}
	    	//FORMAT TOTAL
            DecimalFormat precision = new DecimalFormat("0.00");
			Double total_double = Double.parseDouble(TOTAL.toString()); 
			String total_price = precision.format(total_double);
			subtitle.setText("My Cart (KES."+total_price+")");
			editor.putString("myTrolleyTotal", total_price);
			
	    }
	    
	 }
		
	public void showDialogEmptyTrolley(final String message) throws Exception{
        AlertDialog.Builder builder = new AlertDialog.Builder(ActivityStep08ListCart.this);
        builder.setMessage("You will lose all the items that you have selected. " + message);       

        builder.setPositiveButton("Yes", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                //Clear Cart Session
                sharedPreferences.edit().remove("myTrolley").commit();
                
                Intent intent = new Intent(ActivityStep08ListCart.this, ActivityStep05ListAisles.class);
	    		startActivity(intent);
                
                //Go back to previous page
                //finish();
                dialog.dismiss();
            }
        });

        builder.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {   
            @Override
            public void onClick(DialogInterface dialog, int which) {
                dialog.dismiss();
            }
        });

        builder.show();
    }
	
}
