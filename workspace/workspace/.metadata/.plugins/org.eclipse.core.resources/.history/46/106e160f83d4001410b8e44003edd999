package com.redhering.nunuaraha;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.concurrent.ExecutionException;

import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Bitmap;
import android.graphics.Typeface;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.AdapterView.OnItemClickListener;

import com.google.gson.Gson;
import com.redhering.nunuaraha.R;

public class ActivityViewOrder extends Activity {
	
	ListView listView;
	ListView menuListView;
	LinearLayout layout_progressbar;
	RelativeLayout loginForm;
	LinearLayout rlMenu;
	ImageView menuIcon;
	TextView headerText;
	TextView breadcrumb;
	Button backButton;
	Button homeButton;
	Button accountButton;
	Button cartButton;
	TextView app_name;
	
	ArrayList<RequestedSimpleListOrders> MYORDERS;
	AdapterListOrders myadapter;

	public static final String MY_SESSION = "mySession";
    SharedPreferences sharedPreferences;
    SharedPreferences.Editor editor;
    
    Gson gson;
	
    public static String ORDER_ID;
    public static String ORDER_REF_NUMBER;
    public static String ORDER_DATE;
    public static String ORDER_OUTLET;
    public static String ORDER_AMOUNT;
    public static Typeface FONT_EKMUKTA_LIGHT;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.simple_list_scroller);
		listView = (ListView) findViewById(R.id.simpleListView);
		menuListView = (ListView) findViewById(R.id.menuListView);
		layout_progressbar = (LinearLayout) findViewById(R.id.progressbar_view);
		loginForm = (RelativeLayout) findViewById(R.id.loginForm);
		rlMenu = (LinearLayout) findViewById(R.id.menuListViewCont);
		menuIcon  = (ImageView) findViewById(R.id.menu_icon);
		sharedPreferences = getSharedPreferences(MY_SESSION,Context.MODE_PRIVATE);
		editor = sharedPreferences.edit();
		gson = new Gson();
		FONT_EKMUKTA_LIGHT = Typeface.createFromAsset(getAssets(),"fonts/ek_mukta/EkMukta-Light.ttf");
		
		Bundle extras = getIntent().getExtras();
		ORDER_ID = extras.getString("orderId");
		ORDER_REF_NUMBER = extras.getString("orderRefNumber");
		ORDER_DATE = extras.getString("orderDate");
		ORDER_OUTLET = extras.getString("orderOutlet");
		ORDER_AMOUNT = extras.getString("orderAmount");

		breadcrumb = (TextView) findViewById(R.id.breadcrumb);
  		headerText = (TextView) findViewById(R.id.headerText);
  		app_name = (TextView) findViewById(R.id.app_name);
  		backButton = (Button) findViewById(R.id.backButton);
  		homeButton = (Button) findViewById(R.id.homeButton);
  		accountButton = (Button) findViewById(R.id.accountButton);
  		cartButton = (Button) findViewById(R.id.cartButton);
	    
	    //SET TEXT, APPLY FONTS, SETONCLICKLISTENERS
  		new ApplyViewParamsTask().execute();
        
        //Call AsynTask to perform network operation on separate thread
        new HttpAsyncTask().execute("http://www.smokesignal.co.ke/mobile_trolley_app/getorder.php");
        
        //LIST VIEW
  		MYORDERS = new ArrayList<RequestedSimpleListOrders>();
		myadapter = new AdapterListOrders(ActivityViewOrder.this, MYORDERS,FONT_EKMUKTA_LIGHT);
  		listView.setDividerHeight(0); //remove the default divider line 
		listView.setAdapter(myadapter);
		listView.setTextFilterEnabled(true);
		listView.setOnItemClickListener(new OnItemClickListener() {
			public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
				RequestedSimpleListOrders  item = (RequestedSimpleListOrders) listView.getItemAtPosition(position);
				
				//ADD TO SESSION
				editor.putString("order_date",item.item_one);
	            editor.putString("order_shop",item.item_two);
	            editor.putString("order_amount",item.item_three);
	            editor.commit();
				
			    Intent intent = new Intent(ActivityViewOrder.this, ActivityListPickUpOptions.class);
	    	    startActivity(intent);
			}
		});
        
	}
	
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.activity_test, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}
	
	@Override
	public void onBackPressed() {
	}

	private static String convertInputStreamToString(InputStream inputStream) throws IOException{
        BufferedReader bufferedReader = new BufferedReader( new InputStreamReader(inputStream));
        String line = "";
        String result = "";
        while((line = bufferedReader.readLine()) != null)
            result += line;
 
        inputStream.close();
        return result;
 
    }
	
	private class HttpAsyncTask extends AsyncTask<String, Void, String> {
		@Override
	    protected void onPreExecute() {
			layout_progressbar.setVisibility(View.VISIBLE);
	        listView.setVisibility(View.GONE);
	        super.onPreExecute();
	    }
		
        // onPostExecute displays the results of the AsyncTask.
        @Override
        protected void onPostExecute(String result) {
        	layout_progressbar.setVisibility(View.GONE);
            listView.setVisibility(View.VISIBLE);
            myadapter.notifyDataSetChanged();
            super.onPostExecute(result);
            
            Toast.makeText(getBaseContext(), "Order Received!", Toast.LENGTH_LONG).show();
            
	        try {
	        	
	        	JSONArray jsonArr = new JSONArray(result);
				JSONObject jsonObj = jsonArr.getJSONObject(0); 
				String user_order = jsonObj.getString("user_order");
	        	
                List[] jsonOrderList = gson.fromJson(user_order,List[].class);
                List getjsonOrderListCont = Arrays.asList(jsonOrderList);
                
                Object getOrderObject = getjsonOrderListCont.get(0);
                ArrayList orderList = (ArrayList) getOrderObject;
                
                String[] list_item_ids = new String[orderList.size()];
				String[] list_item_titles = new String[orderList.size()];
                
                for(int i = 0; i < orderList.size(); i++){
                	Object cartItem = orderList.get(i);
                	ArrayList orderItemInfo = (ArrayList) cartItem;
                    
                	String item_id = orderItemInfo.get(0).toString();
                	String item_title = orderItemInfo.get(1).toString();
                	String item_price = orderItemInfo.get(2).toString();
                	String item_size = orderItemInfo.get(3).toString();
                	String item_thumbnail_url = orderItemInfo.get(4).toString();
                	
                	list_item_ids[i] = item_id;
					list_item_titles[i] = item_title;
					
					RequestedSimpleListOrders d = new RequestedSimpleListOrders();
					
					d.setItemId(item_id);
					//d.setItemStatus(item_status);
					d.setItemOne(item_title);
					d.setItemTwo(item_size);
					d.setItemThree(item_price);
					
					d.item_id = item_id;
					//d.item_status = item_status;
				    d.item_one = item_title;
				    d.item_two = item_size;
				    d.item_three = item_price;
				    
				    MYORDERS.add(d);

    				Log.i("user_order", " --> " + item_title);
                }
				
			}catch (JSONException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
       }
        
        

		@Override
        protected String doInBackground(String... urls) {
 
            return GET(urls[0]);
        }
	}

	public static String GET(String url){
        InputStream inputStream = null;
        String result = "";

        List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>();
        nameValuePairs.add(new BasicNameValuePair("order_id",ORDER_ID));
        
        try {
 
            // create HttpClient
            HttpClient httpclient = new DefaultHttpClient();
            
            HttpPost httppost = new HttpPost(url);
            httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));
            
            // make GET request to the given URL
            HttpResponse response = httpclient.execute(httppost);
            
            // receive response as inputStream
            inputStream = response.getEntity().getContent();
 
            // convert inputstream to string
            if(inputStream != null){
                result = convertInputStreamToString(inputStream);
            }else{
                result = "Did not work!";
            }
 
        } catch (Exception e) {
            Log.d("InputStream", e.getLocalizedMessage());
        }
 
        return result;
    }
	
	private class ApplyViewParamsTask extends AsyncTask<String, Void, String> {
		
		@Override
	    protected void onPreExecute() {
	        super.onPreExecute();
	    }
		
		protected String doInBackground(String...params) {
			// TODO Auto-generated method stub
			return "Done";
		}
		
	    protected void onPostExecute(String params) {
	    	//MENU LAYOUT
	  		rlMenu.setVisibility(View.INVISIBLE);

  			//MENU ICON
  			menuIcon.setImageResource(R.drawable.ic_account_grey);
	  		
	    	//SET TEXTS
	  		headerText.setText("Order #"+ORDER_REF_NUMBER);
			breadcrumb.setText(ORDER_DATE + " | " + ORDER_OUTLET + " | KES." + ORDER_AMOUNT);
			
			//SET FONT
			app_name.setTypeface(FONT_EKMUKTA_LIGHT);
	  		headerText.setTypeface(FONT_EKMUKTA_LIGHT);
			breadcrumb.setTypeface(FONT_EKMUKTA_LIGHT);
			backButton.setTypeface(FONT_EKMUKTA_LIGHT);
		    homeButton.setTypeface(FONT_EKMUKTA_LIGHT);
	  		accountButton.setTypeface(FONT_EKMUKTA_LIGHT);
	  		cartButton.setTypeface(FONT_EKMUKTA_LIGHT);
			cartButton.setText("Shopping");
	  		
	  		//SET COLOR
	  		accountButton.setTextColor(getResources().getColor(R.color.green));
	  		
	  		//SET ONCLICKLISTENER
	  		backButton.setOnClickListener(new View.OnClickListener() {
	            @Override
	            public void onClick(View v) {
	        		finish();
	            }
	        }); 
	  		
	  		homeButton.setOnClickListener(new View.OnClickListener() {
	            @Override
	            public void onClick(View v) {
	            	Intent intent = new Intent(ActivityViewOrder.this, ActivityMain.class);
		    	    startActivity(intent);
	                
	            }
	        }); 
	  		
	  		accountButton.setOnClickListener(new View.OnClickListener() {
	            @Override
	            public void onClick(View v) {
	            	Intent intent = new Intent(ActivityViewOrder.this, ActivityMyAccountLogin.class);
		    	    startActivity(intent);
	                
	            }
	        });
	  		
	  		//SET NOTIFICATION FOR THE NUMBER OF ITEMS CURRENTLY IN THE TROLLEY
			TextView cartButtonNotification = (TextView) findViewById(R.id.cartButtonNotification);
			if(sharedPreferences.contains("myTrolley")) {
				String inMyTrolley = sharedPreferences.getString("myTrolley", null);
				Gson gson = new Gson();
				List[] jsonMyTrolley = gson.fromJson(inMyTrolley,List[].class);
                List getjsonMyTrolley = Arrays.asList(jsonMyTrolley);
                
                Object getObject = getjsonMyTrolley.get(0);
                ArrayList myTrolley = (ArrayList) getObject;
                Integer numberOfItemsInMyTrolley = myTrolley.size();
                cartButtonNotification.setText(numberOfItemsInMyTrolley.toString());
                
    	  		cartButton.setOnClickListener(new View.OnClickListener() {
    	            @Override
    	            public void onClick(View v) {
    	            	Intent intent = new Intent(ActivityViewOrder.this, ActivityListAisles.class);
    		    	    startActivity(intent);
    	                
    	            }
    	        });
			}else{
				cartButtonNotification.setText("0");
    	  		cartButton.setOnClickListener(new View.OnClickListener() {
    	            @Override
    	            public void onClick(View v) {
    	            	Intent intent = new Intent(ActivityViewOrder.this, ActivityListOutlets.class);
    		    	    startActivity(intent);
    	                
    	            }
    	        });
			}

	    }
	    
	 }
}
