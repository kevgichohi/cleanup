package com.example.mobiletrolley;

import android.net.Uri;
import android.os.AsyncTask;
import android.util.Log;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.Toast;

import java.io.BufferedInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;
import java.util.concurrent.ExecutionException;

import com.example.mobiletrolley.R;
 
import android.content.Context;
import android.content.DialogInterface;
import android.content.DialogInterface.OnClickListener;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.BitmapFactory.Options;
import android.graphics.drawable.Drawable;
import android.view.LayoutInflater;
import android.widget.TextView;
 
public class ShelvesAdapter extends BaseAdapter implements android.view.View.OnClickListener {
	private static ArrayList<RequestedResults> searchArrayList;
    private LayoutInflater mInflater;
    private Context context;
    private int resource;
    
    final ArrayList<MyCartSimpleList> myCart = ShoppingCartHelper.getCart();
    MyCartAdapter mycartadapter;
 
    public ShelvesAdapter(Context ctx, ArrayList<RequestedResults> results) {
        searchArrayList = results;
        mInflater = LayoutInflater.from(ctx);
        context=ctx;
    }
 
    public int getCount() {
        return searchArrayList.size();
    }
 
    public Object getItem(int position) {
        return searchArrayList.get(position);
    }
 
    public long getItemId(int position) {
        return position;
    }
 
    public View getView(int position, View convertView, ViewGroup parent) {
        ViewHolder holder;
        if (convertView == null) {
            convertView = mInflater.inflate(R.layout.products, null);
            holder = new ViewHolder();
            holder.title = (TextView) convertView.findViewById(R.id.title);
            holder.size = (TextView) convertView.findViewById(R.id.size);
            holder.price = (TextView) convertView.findViewById(R.id.price);
            holder.thumbnail = (ImageView) convertView.findViewById(R.id.thumbnail);
            holder.addtocart = (Button) convertView.findViewById(R.id.addtocart);
            
 
            convertView.setTag(holder);
        } else {
            holder = (ViewHolder) convertView.getTag();
        }
 
        holder.title.setText(searchArrayList.get(position).getTitle());
        holder.size.setText(searchArrayList.get(position).getSize());
        holder.price.setText(searchArrayList.get(position).getPrice());
        
        Bitmap image = null;
		try {
			image = new DownloadImageTask(holder.thumbnail).execute(searchArrayList.get(position).getThumbnailUrl()).get();
		} catch (InterruptedException | ExecutionException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
        holder.thumbnail.setImageBitmap(image);
        

        holder.addtocart.setTag(searchArrayList.get(position).getId());
        holder.addtocart.setOnClickListener(this);

        
        return convertView;
    }
    

	static class ViewHolder {
        TextView title;
        TextView size;
        TextView price;
        ImageView thumbnail;
        Button addtocart;
    }
    
    private class DownloadImageTask extends AsyncTask<String, Void, Bitmap> {
        ImageView bmImage;

        public DownloadImageTask(ImageView bmImage) {
            this.bmImage = bmImage;
        }

        protected Bitmap doInBackground(String... urls) {
            String urldisplay = urls[0];
            Bitmap mIcon11 = null;
            try {
                InputStream in = new java.net.URL(urldisplay).openStream();
                mIcon11 = BitmapFactory.decodeStream(in);
            } catch (Exception e) {
                Log.e("Error", e.getMessage());
                e.printStackTrace();
            }
            return mIcon11;
        }

        protected void onPostExecute(Bitmap result) {
            //bmImage.setImageBitmap(result);
        }
    }
 
    @Override
    public void onClick(View v) {
    	View parentRow = (View) v.getParent();
		ListView listView = (ListView) parentRow.getParent();
		final int position = listView.getPositionForView(parentRow);
		RequestedResults  item = (RequestedResults) listView.getItemAtPosition(position);
		

	    
		
        //Toast.makeText(getContext(), "TEXT CLICKED" + position , Toast.LENGTH_SHORT).show();
		
        Log.i("selected item ", "row clickd --> " + position);
        Log.i("selected item ", "item title --> " + item.item_title);
        Log.i("selected item ", "item id --> " + item.item_id);
        Log.i("selected item ", "item title --> " + item.item_price);
        Log.i("selected item ", "item title --> " + item.item_size);
        Log.i("selected item ", "item title --> " + item.item_thumbnail_url);
        
        MyCartSimpleList d = new MyCartSimpleList();
        //d.item_id = item.item_id;
  	  	//d.item_title = item.item_title;
  	  	//d.item_price = item.item_price;
  	  	//d.item_size = item.item_size;
  	  	//d.item_thumbnail_url = item.item_thumbnail_url;
        //myCart.add(d);
        //mycartadapter.notifyDataSetChanged();
        

        //Intent intent = new Intent(context,MyCartActivity.class);
        //intent.putExtra("selectedItemId", item.item_id);
        //intent.putExtra("selectedItemTitle", item.item_title);
        //intent.putExtra("selectedItemPrice", item.item_price);
        //intent.putExtra("selectedItemImage", item.item_thumbnail_url);
        //intent.putExtra("selectedItemSize", item.item_size);
        //context.startActivity(intent);
        
    }

	private Context getContext() {
		// TODO Auto-generated method stub
		return null;
	}

}
