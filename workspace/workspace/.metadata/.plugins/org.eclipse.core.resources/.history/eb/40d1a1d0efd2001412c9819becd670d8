package com.redhering.nunuaraha;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.ListActivity;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Typeface;
import android.graphics.drawable.ColorDrawable;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.AdapterView.OnItemClickListener;

import com.google.gson.Gson;
import com.redhering.nunuaraha.R;

public class ActivityListBrands extends Activity {
	
	ListView listView;
	ListView menuListView;
	LinearLayout layout_progressbar;
	
	ArrayList<RequestedResults> SHOPSBRANDSLIST;
	AdapterListWithImage myadapter;
	
	ArrayList<RequestedResultsSimpleList> OUTLETLIST;
	AdapterMenu menuadapter;

	public static final String MY_SESSION = "mySession";
    SharedPreferences sharedPreferences;
    SharedPreferences.Editor editor;
	
	//get the passed parameter from the previous activity
	public static String SELECTED_SHOP_ID;
	public static String SELECTED_SHOP_TITLE;
	public static String BREADCRUMB;
	
	Typeface EkMukta_Light;
	TextView previousListLink;
	TextView app_name;
	LinearLayout rlMenu;
	TextView headerText;
	TextView breadcrumb;
	Button backButton;
	Button homeButton;
	Button accountButton;
	Button cartButton;
	
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.simple_list_scroller);
		listView = (ListView) findViewById(R.id.simpleListView);
		menuListView = (ListView) findViewById(R.id.menuListView);
		layout_progressbar = (LinearLayout) findViewById(R.id.progressbar_view);
	    sharedPreferences = getSharedPreferences(MY_SESSION,Context.MODE_PRIVATE);
	    editor = sharedPreferences.edit();
	    
	    SELECTED_SHOP_ID = sharedPreferences.getString("selectedOutletId", null);
	    SELECTED_SHOP_TITLE = sharedPreferences.getString("selectedOutlet", null);
		BREADCRUMB = sharedPreferences.getString("breadcrumbs", null) + " / " + SELECTED_SHOP_TITLE;
		
		EkMukta_Light = Typeface.createFromAsset(getAssets(),"fonts/ek_mukta/EkMukta-Light.ttf");
  		app_name = (TextView) findViewById(R.id.app_name);
		headerText = (TextView) findViewById(R.id.headerText);
		breadcrumb = (TextView) findViewById(R.id.breadcrumb);
  		backButton = (Button) findViewById(R.id.backButton);
  		homeButton = (Button) findViewById(R.id.homeButton);
  		accountButton = (Button) findViewById(R.id.accountButton);
  		cartButton = (Button) findViewById(R.id.cartButton);
		
		//SET TEXT, APPLY FONTS, SETONCLICKLISTENERS
  		new ApplyViewParamsTask().execute();
		
		new HttpAsyncTask().execute("http://www.smokesignal.co.ke/mobile_trolley_app/getshopsbrands.php");// call AsynTask to perform network operation on separate thread

	    
		
		//MENU
  		final LinearLayout rlMenu = (LinearLayout) findViewById(R.id.menuListViewCont);
  		rlMenu.setVisibility(View.INVISIBLE);
        final ImageView menuIcon  = (ImageView) findViewById(R.id.menu_icon);
        menuIcon.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
            	if (rlMenu.getVisibility() == View.VISIBLE) {
            		rlMenu.setVisibility(View.INVISIBLE);
                    overridePendingTransition(R.anim.slide_in_right_to_left, R.anim.slide_out_left_to_right);
                    menuIcon.setImageResource(R.drawable.ic_menu_icon);
            	} else {
            		rlMenu.setVisibility(View.VISIBLE);
                    overridePendingTransition(R.anim.slide_out_left_to_right, R.anim.slide_in_right_to_left);
                    menuIcon.setImageResource(R.drawable.ic_menu_icon_close);
            	}
                
            }
        });
        //MENU LIST VIEW
        previousListLink = (TextView) findViewById(R.id.previousListLink);
        previousListLink.setText("OUTLETS");
        previousListLink.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
			    Intent intent = new Intent(ActivityListBrands.this, ActivityListOutlets.class);
	    	    startActivity(intent);
			}
		});
        
        OUTLETLIST = new ArrayList<RequestedResultsSimpleList>();
		menuadapter = new AdapterMenu(ActivityListBrands.this, OUTLETLIST,EkMukta_Light);
		menuListView.setAdapter(menuadapter);
		menuListView.setTextFilterEnabled(true);
		menuListView.setOnItemClickListener(new OnItemClickListener() {
			public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
			    RequestedResultsSimpleList  item = (RequestedResultsSimpleList) menuListView.getItemAtPosition(position);
			    
			    sharedPreferences = getSharedPreferences(MY_SESSION,MODE_PRIVATE);
	    		SharedPreferences.Editor editor = sharedPreferences.edit();
	            editor.putString("selectedOutlet",item.item_title);
	            editor.putString("selectedOutletId",item.item_id);
	            editor.commit();
	            
			    Intent intent = new Intent(ActivityListBrands.this, ActivityListPickUpOptions.class);
	    	    startActivity(intent);
			}
		});
		
  		
  		//LISTVIEW
  		listView.setDividerHeight(0); //remove the default divider line
  		SHOPSBRANDSLIST = new ArrayList<RequestedResults>();
		myadapter = new AdapterListWithImage(ActivityListBrands.this, SHOPSBRANDSLIST,EkMukta_Light);
		listView.setAdapter(myadapter);
		
		//create on click event
		listView.setTextFilterEnabled(true);
		listView.setOnItemClickListener(new OnItemClickListener() {
			public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
				
				RequestedResults  item = (RequestedResults) listView.getItemAtPosition(position);
				try
		        {
					String currentBrand = sharedPreferences.getString("selectedBrand", null);
					String currentBranch = sharedPreferences.getString("selectedBranch", null);
					String currentBranchId = sharedPreferences.getString("selectedBranchId", null);
					
					if(sharedPreferences.contains("selectedBranchId")){
						if(sharedPreferences.contains("myTrolley") && !currentBranchId.equals(item.item_id)){
							showDialogSelectBrand(item, position, currentBrand + " " + currentBranch + "?");
						}else{
						    Intent intent = new Intent(ActivityListBrands.this, ActivityListAisles.class);
				    	    startActivity(intent);
						}
					}else{
						//ADD TO SESSION
						editor.putString("selectedBrand",item.item_title);
			            editor.putString("selectedBrandId",item.item_id);
			            editor.putString("selectedBrandLogo",item.item_thumbnail_url);
			            editor.commit();
						
					    Intent intent = new Intent(ActivityListBrands.this, ActivityListPickUpOptions.class);
			    	    startActivity(intent);
					}
					
		        }
		        catch (Exception e) 
		        {
		            e.printStackTrace();
		        }
	    	    
			}
		});
        
	}
	
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.activity_test, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}
	
	@Override
	public void onBackPressed() {
	}

	private static String convertInputStreamToString(InputStream inputStream) throws IOException{
        BufferedReader bufferedReader = new BufferedReader( new InputStreamReader(inputStream));
        String line = "";
        String result = "";
        while((line = bufferedReader.readLine()) != null)
            result += line;
 
        inputStream.close();
        return result;
 
    }
	
	private class HttpAsyncTask extends AsyncTask<String, Void, String> {
		@Override
	    protected void onPreExecute() {
			layout_progressbar.setVisibility(View.VISIBLE);
	        listView.setVisibility(View.GONE);
	        menuListView.setVisibility(View.VISIBLE);
	        super.onPreExecute();
	    }
		
        // onPostExecute displays the results of the AsyncTask.
        @Override
        protected void onPostExecute(String result) {
        	layout_progressbar.setVisibility(View.GONE);
            listView.setVisibility(View.VISIBLE);
            myadapter.notifyDataSetChanged();
            menuListView.setVisibility(View.VISIBLE);
            menuadapter.notifyDataSetChanged();
            super.onPostExecute(result);
            
            Toast.makeText(getBaseContext(), "Received Shops!", Toast.LENGTH_LONG).show();
            
	        try {
	        	
	        	JSONArray jsonArr = new JSONArray(result);
	        	String[] list_item_ids = new String[jsonArr.length()];
				String[] list_item_titles = new String[jsonArr.length()];
				
				ArrayList<ArrayList<ArrayList<String>>> outletBrandsIdListCont = new ArrayList<ArrayList<ArrayList<String>>>(); //Outer Array
				ArrayList<ArrayList<String>> outletBrandsIdList = new ArrayList<ArrayList<String>>(); //Inner Array
	        	
				for(int i = 0; i < jsonArr.length(); i++){
					JSONObject jsonObj = jsonArr.getJSONObject(i); 
					String item_id = jsonObj.getString("id");
					String item_title = jsonObj.getString("title");
					String item_image_url = jsonObj.getString("logo");
					
					ArrayList<String> outletBrandsListInfo = new ArrayList<String>(); //Inner array
					outletBrandsListInfo.add(item_id);
					outletBrandsListInfo.add(item_title);
					outletBrandsListInfo.add("https://smokesignal.co.ke/mobiletrolley/img/uploads/" + item_image_url);
					outletBrandsIdList.add(new ArrayList<String>(outletBrandsListInfo)); 
					
					list_item_ids[i] = item_id;
					list_item_titles[i] = item_title;
					
					RequestedResults d = new RequestedResults();
					
					d.setTitle(item_title);
					d.setThumbnailUrl("https://smokesignal.co.ke/mobiletrolley/img/uploads/" + item_image_url);
					
				    d.item_id = item_id;
				    d.item_title = item_title;
				    d.item_thumbnail_url = "https://smokesignal.co.ke/mobiletrolley/img/uploads/" + item_image_url;
				    
				    SHOPSBRANDSLIST.add(d);
				}
				
				//ADD INNER ARRAY TO OUTER ARRAY
				outletBrandsIdListCont.add(new ArrayList<ArrayList<String>>(outletBrandsIdList)); 
				outletBrandsIdList.clear();
	    		Gson gson = new Gson();
	            String jsonOutletBrandsIdList = gson.toJson(outletBrandsIdListCont);
	            editor.putString("outletBrandsIdList", jsonOutletBrandsIdList);
	            editor.commit();
				
				
			}catch (JSONException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	        
	        
	        List[] jsonOutlestList;
        	if(sharedPreferences.contains("outlestIdList")) {
                String getOutlestList = sharedPreferences.getString("outlestIdList", null);
                Gson gson = new Gson();
                jsonOutlestList = gson.fromJson(getOutlestList,List[].class);
                List getjsonAislesListCont = Arrays.asList(jsonOutlestList);
                
                Object getObject = getjsonAislesListCont.get(0);
                ArrayList outletsList = (ArrayList) getObject;
                
                
                for(int i = 0; i < outletsList.size(); i++){
                	Object outletListObject = outletsList.get(i);
                	ArrayList outletListInfo = (ArrayList) outletListObject;
                	
					String outlet_id = outletListInfo.get(0).toString();
					String outlet_title = outletListInfo.get(1).toString();
					
					RequestedResultsSimpleList m = new RequestedResultsSimpleList();
					
					m.setId(outlet_id);
					m.setTitle(outlet_title);
					
				    m.item_id = outlet_id;
				    m.item_title = outlet_title;
				    
				    OUTLETLIST.add(m);
				}
                
                //Log.i("selected item ", "aisle list -->" + aislesList);
        	}
        	
       }
        
        

		@Override
        protected String doInBackground(String... urls) {
 
            return GET(urls[0]);
        }
	}
	
	
	private class ApplyViewParamsTask extends AsyncTask<String, Void, String> {
		
		@Override
	    protected void onPreExecute() {
			layout_progressbar.setVisibility(View.VISIBLE);
	        super.onPreExecute();
	    }
		
		protected String doInBackground(String...params) {
			// TODO Auto-generated method stub
			return "Done";
		}
		
	    protected void onPostExecute(String params) {
	    	//SET TEXTS
	    	headerText.setText(SELECTED_SHOP_TITLE);
	    	breadcrumb.setText(BREADCRUMB);
	    	
	    	//APPLY FONTS
		    app_name.setTypeface(EkMukta_Light);
		 	headerText.setTypeface(EkMukta_Light);
		 	breadcrumb.setTypeface(EkMukta_Light);
		    backButton.setTypeface(EkMukta_Light);
		    homeButton.setTypeface(EkMukta_Light);
	  		accountButton.setTypeface(EkMukta_Light);
	  		cartButton.setTypeface(EkMukta_Light);


	  		//SET ONCLICKLISTENER
	  		backButton.setOnClickListener(new View.OnClickListener() {
	            @Override
	            public void onClick(View v) {
	        		finish();
	            }
	        }); 
	  		
	  		homeButton.setOnClickListener(new View.OnClickListener() {
	            @Override
	            public void onClick(View v) {
	            	Intent intent = new Intent(ActivityListBrands.this, ActivityMain.class);
		    	    startActivity(intent);
	                
	            }
	        }); 
	  		
	  		accountButton.setOnClickListener(new View.OnClickListener() {
	            @Override
	            public void onClick(View v) {
	            	Intent intent = new Intent(ActivityListBrands.this, ActivityMyAccount.class);
		    	    startActivity(intent);
	                
	            }
	        }); 
	  		
	  		//SET NOTIFICATION FOR THE NUMBER OF ITEMS CURRENTLY IN THE TROLLEY
			TextView cartButtonNotification = (TextView) findViewById(R.id.cartButtonNotification);
			if(sharedPreferences.contains("myTrolley")) {
				String inMyTrolley = sharedPreferences.getString("myTrolley", null);
				Gson gson = new Gson();
				List[] jsonMyTrolley = gson.fromJson(inMyTrolley,List[].class);
                List getjsonMyTrolley = Arrays.asList(jsonMyTrolley);
                
                Object getObject = getjsonMyTrolley.get(0);
                ArrayList myTrolley = (ArrayList) getObject;
                Integer numberOfItemsInMyTrolley = myTrolley.size();
                cartButtonNotification.setText(numberOfItemsInMyTrolley.toString());
                
    	  		cartButton.setOnClickListener(new View.OnClickListener() {
    	            @Override
    	            public void onClick(View v) {
    	            	Intent intent = new Intent(ActivityListBrands.this, ActivityMyCart.class);
    		    	    startActivity(intent);
    	                
    	            }
    	        });
			}else{
				cartButtonNotification.setText("0");
    	  		cartButton.setOnClickListener(new View.OnClickListener() {
    	            @Override
    	            public void onClick(View v) {
    	            	Intent intent = new Intent(ActivityListBrands.this, ActivityListOutlets.class);
    		    	    startActivity(intent);
    	                
    	            }
    	        });
			}
	    }
	    
	 }
	
	public static String GET(String url){
        InputStream inputStream = null;
        String result = "";

        List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>();
        nameValuePairs.add(new BasicNameValuePair("shop_id",SELECTED_SHOP_ID));
        
        try {
 
            // create HttpClient
            HttpClient httpclient = new DefaultHttpClient();
            
            HttpPost httppost = new HttpPost(url);
            httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));
            
            // make GET request to the given URL
            HttpResponse response = httpclient.execute(httppost);
            
            // receive response as inputStream
            inputStream = response.getEntity().getContent();
 
            // convert inputstream to string
            if(inputStream != null){
                result = convertInputStreamToString(inputStream);
            }else{
                result = "Did not work!";
            }
 
        } catch (Exception e) {
            Log.d("InputStream", e.getLocalizedMessage());
        }
 
        return result;
    }
	
	public void showDialogSelectBrand(final RequestedResults item, final int position, final String message) throws Exception{
        AlertDialog.Builder builder = new AlertDialog.Builder(ActivityListBrands.this);
        builder.setMessage("You will lose all the items in your trolley at " + message + " Are you sure?");     

        builder.setPositiveButton("Yes", new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
            	
            	//Clear Cart Session
                sharedPreferences.edit().remove("myTrolley").commit();
                
	            editor.putString("selectedBranch",item.item_title);
	            editor.putString("selectedBranchId",item.item_id);
	            editor.putString("selectedBranchDeliveryCharges",item.delivery_charge);
	            editor.commit();
	            
			    Intent intent = new Intent(ActivityListBrands.this, ActivityListAisles.class);
	    	    startActivity(intent);
                
                dialog.dismiss();
            }
        });

        builder.setNegativeButton("Cancel", new DialogInterface.OnClickListener() {   
            @Override
            public void onClick(DialogInterface dialog, int which) {
                dialog.dismiss();
            }
        });

        builder.show();
    }
	
}
