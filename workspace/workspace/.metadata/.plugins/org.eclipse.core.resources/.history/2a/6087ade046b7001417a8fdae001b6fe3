package com.example.mobiletrolley;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.List;

import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;


import android.app.Activity;
import android.app.ListActivity;
import android.content.DialogInterface.OnClickListener;
import android.content.Intent;
import android.content.SharedPreferences;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.AdapterView.OnItemClickListener;

public class MyCartActivity extends Activity {
	
	ListView listView;
	LinearLayout layout;
	final ArrayList<MyCartSimpleList> CATALOG = ShoppingCartHelper.getCart();
	MyCartAdapter myadapter;
	
	//get the passed parameter from the previous activity
	public static String SELECTED_ITEM_ID;
	public static String SELECTED_ITEM_TITLE;
	public static String SELECTED_ITEM_PRICE;
	public static String SELECTED_ITEM_IMAGE_URL;
	public static String SELECTED_ITEM_SIZE;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.shoppingcart_scroller);
		listView = (ListView) findViewById(R.id.productsListView);
	    layout = (LinearLayout) findViewById(R.id.progressbar_view);
		

		Bundle extras = getIntent().getExtras();
		SELECTED_ITEM_ID = extras.getString("selectedItemId");
		SELECTED_ITEM_TITLE = extras.getString("selectedItemTitle");
		SELECTED_ITEM_PRICE = extras.getString("selectedItemPrice");
		SELECTED_ITEM_IMAGE_URL = extras.getString("selectedItemImage");
		SELECTED_ITEM_SIZE = extras.getString("selectedItemSize");
		
		
		//add header
		TextView headerText = (TextView) findViewById(R.id.headerText);
		headerText.setText("My Trolley");
  		
  		//remove the default divider line
  		listView.setDividerHeight(0); 
  		
  		
  		//setup the adapter
  		//CATALOG = new ArrayList<MyCartSimpleList>();
		myadapter = new MyCartAdapter(MyCartActivity.this, CATALOG);
		listView.setAdapter(myadapter);
		
		
		// call AsynTask to perform network operation on separate thread
        new HttpAsyncTask().execute("");
	}

	private static String convertInputStreamToString(InputStream inputStream) throws IOException{
        BufferedReader bufferedReader = new BufferedReader( new InputStreamReader(inputStream));
        String line = "";
        String result = "";
        while((line = bufferedReader.readLine()) != null)
            result += line;
 
        inputStream.close();
        return result;
 
    }
	
	private class HttpAsyncTask extends AsyncTask<String, Void, String> {
		@Override
	    protected void onPreExecute() {
	        layout.setVisibility(View.VISIBLE);
	        listView.setVisibility(View.GONE);
	        super.onPreExecute();
	    }
		
		
        // onPostExecute displays the results of the AsyncTask.
        @Override
        protected void onPostExecute(String result) {
        	
        	layout.setVisibility(View.GONE);
            listView.setVisibility(View.VISIBLE);
            myadapter.notifyDataSetChanged();
            super.onPostExecute(result);
            
            Toast.makeText(getBaseContext(), "My Trolley", Toast.LENGTH_LONG).show();
            
            //NUmber format the price
			//DecimalFormat precision = new DecimalFormat("0.00");
			//Double item_price_double = Double.parseDouble(SELECTED_ITEM_PRICE); 
			//String item_price = "KES " + precision.format(item_price_double);
            
            
            MyCartSimpleList d = new MyCartSimpleList();
			
			d.setId(SELECTED_ITEM_ID);
			d.setTitle(SELECTED_ITEM_TITLE);
		    d.setPrice(SELECTED_ITEM_PRICE);
		    d.setSize(SELECTED_ITEM_SIZE);
		    d.setThumbnailUrl(SELECTED_ITEM_IMAGE_URL);
			
		    d.item_id = SELECTED_ITEM_ID;
		    d.item_title = SELECTED_ITEM_TITLE;
		    d.item_price = SELECTED_ITEM_PRICE;
		    d.item_size = SELECTED_ITEM_SIZE;
		    d.item_thumbnail_url = SELECTED_ITEM_IMAGE_URL;
		    
		    CATALOG.add(d);
        }
    
        
        @Override
        protected String doInBackground(String... urls) {
 
            return GET(urls[0]);
        }
	}
	
	public static String GET(String url){
        InputStream inputStream = null;
        String result = "";

        List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>();
        
        try {
 
            // create HttpClient
            HttpClient httpclient = new DefaultHttpClient();
            
            HttpPost httppost = new HttpPost(url);
            httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));
            
            // make GET request to the given URL
            HttpResponse response = httpclient.execute(httppost);
            
            // receive response as inputStream
            inputStream = response.getEntity().getContent();
 
            // convert inputstream to string
            if(inputStream != null){
                result = convertInputStreamToString(inputStream);
            }else{
                result = "Did not work!";
            }
 
        } catch (Exception e) {
            Log.d("InputStream", e.getLocalizedMessage());
        }
 
        return result;
    }

	
	
	
	

}
