package com.redhering.nunuaraha;

import android.net.Uri;
import android.os.AsyncTask;
import android.preference.PreferenceManager;
import android.util.Log;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.Toast;

import java.io.BufferedInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLConnection;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.concurrent.ExecutionException;

import com.redhering.nunuaraha.R;
import com.google.gson.Gson;
 
import android.content.Context;
import android.content.DialogInterface;
import android.content.DialogInterface.OnClickListener;
import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Typeface;
import android.graphics.BitmapFactory.Options;
import android.graphics.drawable.Drawable;
import android.view.LayoutInflater;
import android.widget.TextView;
 
public class AdapterProducts extends BaseAdapter implements android.view.View.OnClickListener {
	private static ArrayList<RequestedResults> searchArrayList;
    private LayoutInflater mInflater;
    private Context context;
    private TextView cartButtonNotification;
    private LinearLayout layout_progressbar;
    private int resource;
    public static Integer COUNT_CART_ITEMS;
    
	public static final String MY_SESSION = "mySession";
    SharedPreferences sharedPreferences;
    Gson gson;
    Typeface EkMukta_Light;
    
    public AdapterProducts(Context ctx, ArrayList<RequestedResults> results, TextView cartBtnNotification, LinearLayout progressbar) {
        searchArrayList = results;
        mInflater = LayoutInflater.from(ctx);
        context=ctx;
  		EkMukta_Light = Typeface.createFromAsset(context.getAssets(),"fonts/ek_mukta/EkMukta-Light.ttf");
        sharedPreferences = context.getSharedPreferences(MY_SESSION,Context.MODE_PRIVATE);
        gson = new Gson();
        cartButtonNotification = cartBtnNotification;
        layout_progressbar = progressbar;
        
        COUNT_CART_ITEMS = 0;
        if(sharedPreferences.contains("myTrolley")) {
			String inMyTrolley = sharedPreferences.getString("myTrolley", null);
			List[] jsonMyTrolley = gson.fromJson(inMyTrolley,List[].class);
            List getjsonMyTrolley = Arrays.asList(jsonMyTrolley);
            
            Object getObject = getjsonMyTrolley.get(0);
            ArrayList myTrolley = (ArrayList) getObject;
            Integer numberOfItemsInMyTrolley = myTrolley.size();
            COUNT_CART_ITEMS = numberOfItemsInMyTrolley;
		}
    }

	public int getCount() {
        return searchArrayList.size();
    }
 
    public Object getItem(int position) {
        return searchArrayList.get(position);
    }
 
    public long getItemId(int position) {
        return position;
    }
 
    public View getView(int position, View convertView, ViewGroup parent) {
        ViewHolder holder;
        if (convertView == null) {
            convertView = mInflater.inflate(R.layout.products, null);
            holder = new ViewHolder();
            holder.title = (TextView) convertView.findViewById(R.id.title);
            holder.size = (TextView) convertView.findViewById(R.id.size);
            holder.price = (TextView) convertView.findViewById(R.id.price);
            holder.thumbnail = (ImageView) convertView.findViewById(R.id.thumbnail);
            holder.addtocart = (Button) convertView.findViewById(R.id.addtocart);
 
            convertView.setTag(holder);
        } else {
            holder = (ViewHolder) convertView.getTag();
        }
        
  		
  		
  		//TITLE
        holder.title.setText(searchArrayList.get(position).getTitle());
        holder.title.setTypeface(EkMukta_Light);
        
        //SIZE
        if(searchArrayList.get(position).getSize() != ""){
        	holder.size.setText(searchArrayList.get(position).getSize());
        	holder.size.setTypeface(EkMukta_Light);
        }else{
        	holder.size.setVisibility(View.GONE);
        	holder.addtocart.setVisibility(View.GONE);
        }
        
        //PRICE
        String price = searchArrayList.get(position).getPrice();
        if(android.text.TextUtils.isEmpty(price) == false && android.text.TextUtils.isDigitsOnly(price)){
			DecimalFormat precision = new DecimalFormat("0.00");
			Double item_price_double = Double.parseDouble(searchArrayList.get(position).getPrice()); 
			String item_price = "KES. " + precision.format(item_price_double);
	        holder.price.setText(item_price);
	  		holder.price.setTypeface(EkMukta_Light);
        }else{
        	holder.price.setVisibility(View.GONE);
        }
        
        
        //THUMBNAIL IMAGE
        if(searchArrayList.get(position).getThumbnailUrl() != ""){
        	// download image
            ImageDownloader imageDownloader = new ImageDownloader();
            imageDownloader.download(searchArrayList.get(position).getThumbnailUrl(), holder.thumbnail);

        }else{
        	holder.thumbnail.setVisibility(View.GONE);
        }
        
        //UNITS IN CART
        Integer unitsInCart = searchArrayList.get(position).getUnits();
        holder.addtocart.setTypeface(EkMukta_Light);
        if(unitsInCart != null && !unitsInCart.equals(0)){
	        holder.addtocart.setText(searchArrayList.get(position).getUnits() + " added");
        }else{
        	holder.addtocart.setText("");
        }
  		
        holder.addtocart.setTag(searchArrayList.get(position).getId());
        holder.addtocart.setOnClickListener(this);
        
        return convertView;
    }
    

	static class ViewHolder {
        TextView title;
        TextView size;
        TextView price;
        ImageView thumbnail;
        Button addtocart;
    }
  
    @Override
    public void onClick(View v) {
    	
    	View parentRow = (View) v.getParent();
		ListView listView = (ListView) parentRow.getParent();
		final int position = listView.getPositionForView(parentRow);
		RequestedResults  item = (RequestedResults) listView.getItemAtPosition(position);
        
        ArrayList<ArrayList<ArrayList<String>>> inMyTrolleyCont = new ArrayList<ArrayList<ArrayList<String>>>();  //Container Array
      	ArrayList<ArrayList<String>> inMyTrolleyItem = new ArrayList<ArrayList<String>>(); //Item Array
      	ArrayList<String> inMyTrolleyItemDetail = new ArrayList<String>(); //Item Details Array
        
        List getMyCart = null;
        List[] jsonCartList;
        if(sharedPreferences.contains("myTrolley")) { //UPDATE CART
            String getCartList = sharedPreferences.getString("myTrolley", null);
            jsonCartList = gson.fromJson(getCartList,List[].class);
            List getjsonCartListCont = Arrays.asList(jsonCartList);
            
            Object getObject = getjsonCartListCont.get(0);
            inMyTrolleyItem = (ArrayList<ArrayList<String>>) getObject;
            
            //Populate the inner array for the new item added to cart
            inMyTrolleyItemDetail.add(item.item_id); 
            inMyTrolleyItemDetail.add(item.item_title); 
            inMyTrolleyItemDetail.add(item.item_price);  
            inMyTrolleyItemDetail.add(item.item_size);
            inMyTrolleyItemDetail.add(item.item_thumbnail_url);
            
            inMyTrolleyItem.add(inMyTrolleyItemDetail);
            inMyTrolleyCont.add((inMyTrolleyItem)); 
            
         	//UPDATE SESSION
    	    SharedPreferences.Editor editor = sharedPreferences.edit();
            String myCart = gson.toJson(inMyTrolleyCont);
            editor.putString("myTrolley", myCart);
            editor.commit();

        }else{ //CREATE CART
        	
        	//Populate the inner array for the new item added to cart
        	inMyTrolleyItemDetail.add(item.item_id); 
        	inMyTrolleyItemDetail.add(item.item_title); 
        	inMyTrolleyItemDetail.add(item.item_price);  
        	inMyTrolleyItemDetail.add(item.item_size);
        	inMyTrolleyItemDetail.add(item.item_thumbnail_url);

        	inMyTrolleyItem.add(inMyTrolleyItemDetail);
            inMyTrolleyCont.add((inMyTrolleyItem)); 
    		
    		//CREATE SESSION
    	    SharedPreferences.Editor editor = sharedPreferences.edit();
            String myCart = gson.toJson(inMyTrolleyCont);
            editor.putString("myTrolley", myCart);
            
            // Commit the edits!
            editor.commit();
        	
        }

        Toast.makeText(context, "Added to cart" , Toast.LENGTH_SHORT).show(); 
        
        COUNT_CART_ITEMS ++;
        cartButtonNotification.setText(COUNT_CART_ITEMS.toString());

        //Log.i("selected item ", "in cart -->" + inMyTrolleyCont);  
		
    }


	private Context getContext() {
		// TODO Auto-generated method stub
		return null;
	}

}
